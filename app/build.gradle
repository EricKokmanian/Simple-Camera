apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.simplemobiletools.camera"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 64
        versionName "5.0.0"
        setProperty("archivesBaseName", "camera")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled = true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/main/tests'
        androidTest.java.srcDirs += 'src/main/androidTest'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation 'com.simplemobiletools:commons:5.1.4'
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-ml-vision:19.0.2'
    implementation 'com.google.firebase:firebase-ml-vision-image-label-model:17.0.2'
    implementation "junit:junit:4.12"
    implementation "org.mockito:mockito-core:1.+"
    implementation 'me.dm7.barcodescanner:zxing:1.9'

    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.karumi:dexter:4.1.0'
    implementation 'info.androidhive:imagefilters:1.0.7'
    implementation 'com.android.volley:volley:1.1.1'

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2',{
        exclude group: 'com.android.support',module: 'support-annotations'
    }
    androidTestImplementation 'com.android.support.test:runner:1.0.2',{
        exclude group: 'com.android.support',module: 'support-annotations'
    }
    androidTestImplementation 'com.android.support.test:rules:1.0.2'


}

Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('KEY_ALIAS') && props.containsKey('PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'jacoco-android'

jacoco {
    toolVersion = "0.8.3"
}

tasks.withType(Test){
    jacoco.includeNoLocationClasses = true
}
